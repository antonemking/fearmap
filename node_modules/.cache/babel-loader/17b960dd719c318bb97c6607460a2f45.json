{"ast":null,"code":"import layerEvents from \"../../lib/layerEvents\";\nimport mixin from \"./layerMixin\";\nexport default {\n  name: \"RasterLayer\",\n  mixins: [mixin],\n\n  created() {\n    this.$_deferredMount();\n  },\n\n  methods: {\n    $_deferredMount() {\n      let source = {\n        type: \"raster\",\n        ...this.source\n      };\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.map.off(\"dataloading\", this.$_watchSourceLoading);\n      this.initial = false;\n    },\n\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", {\n            layerId: this.layerId\n          });\n          return existed;\n        }\n      }\n\n      let layer = {\n        id: this.layerId,\n        type: \"raster\",\n        source: this.sourceId,\n        ...this.layer\n      };\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", {\n        layerId: this.layerId\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/muhammad/Ayaz/express-vue3-tailwind-map/client/node_modules/vue-mapbox/src/components/layer/RasterLayer.js"],"names":["layerEvents","mixin","name","mixins","created","$_deferredMount","methods","source","type","map","on","$_watchSourceLoading","addSource","sourceId","err","replaceSource","removeSource","$_addLayer","$_bindLayerEvents","off","initial","existed","getLayer","layerId","replace","removeLayer","$_emitEvent","layer","id","addLayer","before"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,aADO;AAEbC,EAAAA,MAAM,EAAE,CAACF,KAAD,CAFK;;AAIbG,EAAAA,OAAO,GAAG;AACR,SAAKC,eAAL;AACD,GANY;;AAQbC,EAAAA,OAAO,EAAE;AACPD,IAAAA,eAAe,GAAG;AAChB,UAAIE,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,QADK;AAEX,WAAG,KAAKD;AAFG,OAAb;AAKA,WAAKE,GAAL,CAASC,EAAT,CAAY,aAAZ,EAA2B,KAAKC,oBAAhC;;AACA,UAAI;AACF,aAAKF,GAAL,CAASG,SAAT,CAAmB,KAAKC,QAAxB,EAAkCN,MAAlC;AACD,OAFD,CAEE,OAAOO,GAAP,EAAY;AACZ,YAAI,KAAKC,aAAT,EAAwB;AACtB,eAAKN,GAAL,CAASO,YAAT,CAAsB,KAAKH,QAA3B;AACA,eAAKJ,GAAL,CAASG,SAAT,CAAmB,KAAKC,QAAxB,EAAkCN,MAAlC;AACD;AACF;;AACD,WAAKU,UAAL;AACA,WAAKC,iBAAL,CAAuBlB,WAAvB;AACA,WAAKS,GAAL,CAASU,GAAT,CAAa,aAAb,EAA4B,KAAKR,oBAAjC;AACA,WAAKS,OAAL,GAAe,KAAf;AACD,KApBM;;AAsBPH,IAAAA,UAAU,GAAG;AACX,UAAII,OAAO,GAAG,KAAKZ,GAAL,CAASa,QAAT,CAAkB,KAAKC,OAAvB,CAAd;;AACA,UAAIF,OAAJ,EAAa;AACX,YAAI,KAAKG,OAAT,EAAkB;AAChB,eAAKf,GAAL,CAASgB,WAAT,CAAqB,KAAKF,OAA1B;AACD,SAFD,MAEO;AACL,eAAKG,WAAL,CAAiB,cAAjB,EAAiC;AAAEH,YAAAA,OAAO,EAAE,KAAKA;AAAhB,WAAjC;AACA,iBAAOF,OAAP;AACD;AACF;;AACD,UAAIM,KAAK,GAAG;AACVC,QAAAA,EAAE,EAAE,KAAKL,OADC;AAEVf,QAAAA,IAAI,EAAE,QAFI;AAGVD,QAAAA,MAAM,EAAE,KAAKM,QAHH;AAIV,WAAG,KAAKc;AAJE,OAAZ;AAOA,WAAKlB,GAAL,CAASoB,QAAT,CAAkBF,KAAlB,EAAyB,KAAKG,MAA9B;AACA,WAAKJ,WAAL,CAAiB,OAAjB,EAA0B;AAAEH,QAAAA,OAAO,EAAE,KAAKA;AAAhB,OAA1B;AACD;;AAzCM;AARI,CAAf","sourcesContent":["import layerEvents from \"../../lib/layerEvents\";\nimport mixin from \"./layerMixin\";\n\nexport default {\n  name: \"RasterLayer\",\n  mixins: [mixin],\n\n  created() {\n    this.$_deferredMount();\n  },\n\n  methods: {\n    $_deferredMount() {\n      let source = {\n        type: \"raster\",\n        ...this.source\n      };\n\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.map.off(\"dataloading\", this.$_watchSourceLoading);\n      this.initial = false;\n    },\n\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", { layerId: this.layerId });\n          return existed;\n        }\n      }\n      let layer = {\n        id: this.layerId,\n        type: \"raster\",\n        source: this.sourceId,\n        ...this.layer\n      };\n\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", { layerId: this.layerId });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}