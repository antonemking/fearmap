{"ast":null,"code":"import controlMixin from \"./controlMixin\";\nexport default {\n  name: \"ScaleControl\",\n  mixins: [controlMixin],\n  props: {\n    maxWidth: {\n      type: Number,\n      default: 150\n    },\n    unit: {\n      type: String,\n      default: \"metric\",\n\n      validator(value) {\n        return [\"imperial\", \"metric\", \"nautical\"].includes(value);\n      }\n\n    }\n  },\n  watch: {\n    unit(next, prev) {\n      if (this.control && next !== prev) {\n        this.control.setUnit(next);\n      }\n    }\n\n  },\n\n  created() {\n    this.control = new this.mapbox.ScaleControl(this.$props);\n    this.$_addControl();\n  }\n\n};","map":{"version":3,"sources":["/Users/muhammad/Ayaz/express-vue3-tailwind-map/client/node_modules/vue-mapbox/src/components/UI/controls/ScaleControl.js"],"names":["controlMixin","name","mixins","props","maxWidth","type","Number","default","unit","String","validator","value","includes","watch","next","prev","control","setUnit","created","mapbox","ScaleControl","$props","$_addControl"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,cADO;AAGbC,EAAAA,MAAM,EAAE,CAACF,YAAD,CAHK;AAKbG,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEC,MADE;AAERC,MAAAA,OAAO,EAAE;AAFD,KADL;AAKLC,IAAAA,IAAI,EAAE;AACJH,MAAAA,IAAI,EAAEI,MADF;AAEJF,MAAAA,OAAO,EAAE,QAFL;;AAGJG,MAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,eAAO,CAAC,UAAD,EAAa,QAAb,EAAuB,UAAvB,EAAmCC,QAAnC,CAA4CD,KAA5C,CAAP;AACD;;AALG;AALD,GALM;AAmBbE,EAAAA,KAAK,EAAE;AACLL,IAAAA,IAAI,CAACM,IAAD,EAAOC,IAAP,EAAa;AACf,UAAI,KAAKC,OAAL,IAAgBF,IAAI,KAAKC,IAA7B,EAAmC;AACjC,aAAKC,OAAL,CAAaC,OAAb,CAAqBH,IAArB;AACD;AACF;;AALI,GAnBM;;AA2BbI,EAAAA,OAAO,GAAG;AACR,SAAKF,OAAL,GAAe,IAAI,KAAKG,MAAL,CAAYC,YAAhB,CAA6B,KAAKC,MAAlC,CAAf;AACA,SAAKC,YAAL;AACD;;AA9BY,CAAf","sourcesContent":["import controlMixin from \"./controlMixin\";\n\nexport default {\n  name: \"ScaleControl\",\n\n  mixins: [controlMixin],\n\n  props: {\n    maxWidth: {\n      type: Number,\n      default: 150\n    },\n    unit: {\n      type: String,\n      default: \"metric\",\n      validator(value) {\n        return [\"imperial\", \"metric\", \"nautical\"].includes(value);\n      }\n    }\n  },\n\n  watch: {\n    unit(next, prev) {\n      if (this.control && next !== prev) {\n        this.control.setUnit(next);\n      }\n    }\n  },\n\n  created() {\n    this.control = new this.mapbox.ScaleControl(this.$props);\n    this.$_addControl();\n  }\n};\n"]},"metadata":{},"sourceType":"module"}