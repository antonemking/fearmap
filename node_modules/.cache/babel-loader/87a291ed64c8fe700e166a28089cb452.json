{"ast":null,"code":"import mapboxgl from \"mapbox-gl\";\nexport default {\n  name: \"HomeView\",\n\n  data() {\n    return {\n      map: null,\n      locations: [{\n        name: \"Brushy Mountain State Penitentiary\",\n        date: \"2019-10-26\",\n        coordinates: {\n          latitude: 36.1052,\n          longitude: -84.4529\n        }\n      }, {\n        name: \"Old South Pittsburg Hospital\",\n        date: \"2019-11-02\",\n        coordinates: {\n          latitude: 35.0021,\n          longitude: -85.7147\n        }\n      }],\n      accessToken: `${process.env.VUE_APP_API_KEY}`\n    };\n  },\n\n  mounted() {\n    mapboxgl.accessToken = this.accessToken;\n    this.map = new mapboxgl.Map({\n      container: \"mapContainer\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [103.811279, 1.345399],\n      zoom: 12\n    }); // Create a popup, but don't add it to the map yet.\n\n    const popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    });\n    this.map.on('mouseenter', 'places', e => {\n      // Change the cursor style as a UI indicator.\n      this.map.getCanvas().style.cursor = 'pointer';\n      console.log('=============e', e); // Copy coordinates array.\n\n      const coordinates = e.features[0].geometry.coordinates.slice();\n      const description = e.features[0].properties.description; // Ensure that if the map is zoomed out such that multiple\n      // copies of the feature are visible, the popup appears\n      // over the copy being pointed to.\n\n      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n      } // Populate the popup and set its coordinates\n      // based on the feature found.\n\n\n      popup.setLngLat(coordinates).setHTML(description).addTo(this.map);\n    });\n    this.map.on('mouseleave', 'places', () => {\n      this.map.getCanvas().style.cursor = '';\n      popup.remove();\n    });\n  },\n\n  methods: {\n    addMarker(cords) {\n      mapboxgl.accessToken = this.accessToken;\n      new mapboxgl.Marker().setLngLat([cords.longitude, cords.latitude]).addTo(this.map);\n      this.map.setCenter([cords.longitude, cords.latitude]);\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/muhammad/Ayaz/express-vue3-tailwind-map/client/src/views/HomeView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"flex h-screen relative\">\n    <div class=\"w-[30%]\">\n      <div\n        v-for=\"(location, ind) in locations\"\n        :key=\"ind\"\n        @click=\"addMarker(location.coordinates)\"\n        class=\"border-[1px] p-2\"\n      >\n        <h2 class=\"text-[14px]\">{{ location.name }}</h2>\n        <span>{{ location.date }}</span>\n      </div>\n    </div>\n    <div id=\"mapContainer\" class=\"w-[70%]\"></div>\n    <!-- <MglMap\n    :accessToken=\"accessToken\"\n    :mapStyle=\"mapStyle\"\n    :center=\"coordinates\"\n  >\n    <MglMarker :coordinates=\"coordinates\" color=\"red\" />\n  </MglMap> -->\n  </div>\n</template>\n\n<script>\nimport mapboxgl from \"mapbox-gl\";\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      map: null,\n      locations: [\n        {\n          name: \"Brushy Mountain State Penitentiary\",\n          date: \"2019-10-26\",\n          coordinates: {\n              latitude: 36.1052,\n              longitude: -84.4529,\n          },\n        },\n\n        {\n          name: \"Old South Pittsburg Hospital\",\n          date: \"2019-11-02\",\n          coordinates: {\n              latitude: 35.0021,\n              longitude: -85.7147,\n          },\n        },\n      ],\n      accessToken: `${process.env.VUE_APP_API_KEY}`,\n    };\n  },\n  mounted() {\n    mapboxgl.accessToken = this.accessToken;\n\n     this.map = new mapboxgl.Map({\n      container: \"mapContainer\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [103.811279, 1.345399],\n      zoom: 12,\n    });\n    // Create a popup, but don't add it to the map yet.\n    const popup = new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: false\n    });\n    \n   this.map.on('mouseenter', 'places', (e) => {\n    // Change the cursor style as a UI indicator.\n   this.map.getCanvas().style.cursor = 'pointer';\n    console.log('=============e', e);\n    // Copy coordinates array.\n    const coordinates = e.features[0].geometry.coordinates.slice();\n    const description = e.features[0].properties.description;\n    \n    // Ensure that if the map is zoomed out such that multiple\n    // copies of the feature are visible, the popup appears\n    // over the copy being pointed to.\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n    }\n    \n    // Populate the popup and set its coordinates\n    // based on the feature found.\n    popup.setLngLat(coordinates).setHTML(description).addTo(this.map);\n    });\n    \n   this.map.on('mouseleave', 'places', () => {\n     this.map.getCanvas().style.cursor = '';\n      popup.remove();\n    });\n  },\n  methods: {\n    addMarker(cords){\n      mapboxgl.accessToken = this.accessToken;\n      new mapboxgl.Marker()\n      .setLngLat([cords.longitude, cords.latitude])\n      .addTo(this.map);\n      this.map.setCenter([cords.longitude, cords.latitude]);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.mapboxgl-popup {\n  max-width: 400px;\n  font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}