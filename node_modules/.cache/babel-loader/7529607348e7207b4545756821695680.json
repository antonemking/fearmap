{"ast":null,"code":"import withEvents from \"../../lib/withEvents\";\nimport mapEvents from \"./events\";\nimport options from \"./options\";\nimport withWatchers from \"./mixins/withWatchers\";\nimport withPrivateMethods from \"./mixins/withPrivateMethods\";\nimport withAsyncActions from \"./mixins/withAsyncActions\";\nexport default {\n  name: \"GlMap\",\n  mixins: [withWatchers, withAsyncActions, withPrivateMethods, withEvents],\n  props: {\n    mapboxGl: {\n      type: Object,\n      default: null\n    },\n    ...options\n  },\n\n  provide() {\n    const self = this;\n    return {\n      get mapbox() {\n        return self.mapbox;\n      },\n\n      get map() {\n        return self.map;\n      },\n\n      get actions() {\n        return self.actions;\n      }\n\n    };\n  },\n\n  data() {\n    return {\n      initial: true,\n      initialized: false\n    };\n  },\n\n  computed: {\n    loaded() {\n      return this.map ? this.map.loaded() : false;\n    },\n\n    version() {\n      return this.map ? this.map.version : null;\n    },\n\n    // TODO: make 'bounds' synced prop\n    bounds() {\n      return this.map ? this.map.getBounds() : null;\n    },\n\n    isStyleLoaded() {\n      return this.map ? this.map.isStyleLoaded() : false;\n    },\n\n    areTilesLoaded() {\n      return this.map ? this.map.areTilesLoaded() : false;\n    },\n\n    isMoving() {\n      return this.map ? this.map.isMoving() : false;\n    },\n\n    canvas() {\n      return this.map ? this.map.getCanvas() : null;\n    },\n\n    canvasContainer() {\n      return this.map ? this.map.getCanvasContainer() : null;\n    },\n\n    images() {\n      return this.map ? this.map.listImages() : null;\n    }\n\n  },\n\n  created() {\n    this.map = null;\n    this.propsIsUpdating = {};\n    this.mapboxPromise = this.mapboxGl ? Promise.resolve(this.mapboxGl) : import(\"mapbox-gl\");\n  },\n\n  mounted() {\n    this.$_loadMap().then(map => {\n      this.map = map;\n\n      if (this.RTLTextPluginUrl !== undefined) {\n        this.mapbox.setRTLTextPlugin(this.RTLTextPluginUrl, this.$_RTLTextPluginError);\n      }\n\n      const eventNames = Object.keys(mapEvents);\n      this.$_bindMapEvents(eventNames);\n      this.$_registerAsyncActions(map);\n      this.$_bindPropsUpdateEvents();\n      this.initial = false;\n      this.initialized = true;\n      this.$emit(\"load\", {\n        map,\n        component: this\n      });\n    });\n  },\n\n  beforeDestroy() {\n    this.$nextTick(() => {\n      if (this.map) this.map.remove();\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/muhammad/Ayaz/express-vue3-tailwind-map/client/node_modules/vue-mapbox/src/components/map/GlMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mgl-map-wrapper\">\n    <div v-once :id=\"container\" ref=\"container\" />\n    <slot v-if=\"initialized\" />\n  </div>\n</template>\n\n<script>\nimport withEvents from \"../../lib/withEvents\";\nimport mapEvents from \"./events\";\nimport options from \"./options\";\nimport withWatchers from \"./mixins/withWatchers\";\nimport withPrivateMethods from \"./mixins/withPrivateMethods\";\nimport withAsyncActions from \"./mixins/withAsyncActions\";\n\nexport default {\n  name: \"GlMap\",\n\n  mixins: [withWatchers, withAsyncActions, withPrivateMethods, withEvents],\n\n  props: {\n    mapboxGl: {\n      type: Object,\n      default: null\n    },\n    ...options\n  },\n\n  provide() {\n    const self = this;\n    return {\n      get mapbox() {\n        return self.mapbox;\n      },\n      get map() {\n        return self.map;\n      },\n      get actions() {\n        return self.actions;\n      }\n    };\n  },\n\n  data() {\n    return {\n      initial: true,\n      initialized: false\n    };\n  },\n\n  computed: {\n    loaded() {\n      return this.map ? this.map.loaded() : false;\n    },\n    version() {\n      return this.map ? this.map.version : null;\n    },\n    // TODO: make 'bounds' synced prop\n    bounds() {\n      return this.map ? this.map.getBounds() : null;\n    },\n    isStyleLoaded() {\n      return this.map ? this.map.isStyleLoaded() : false;\n    },\n    areTilesLoaded() {\n      return this.map ? this.map.areTilesLoaded() : false;\n    },\n    isMoving() {\n      return this.map ? this.map.isMoving() : false;\n    },\n    canvas() {\n      return this.map ? this.map.getCanvas() : null;\n    },\n    canvasContainer() {\n      return this.map ? this.map.getCanvasContainer() : null;\n    },\n    images() {\n      return this.map ? this.map.listImages() : null;\n    }\n  },\n\n  created() {\n    this.map = null;\n    this.propsIsUpdating = {};\n    this.mapboxPromise = this.mapboxGl\n      ? Promise.resolve(this.mapboxGl)\n      : import(\"mapbox-gl\");\n  },\n\n  mounted() {\n    this.$_loadMap().then(map => {\n      this.map = map;\n      if (this.RTLTextPluginUrl !== undefined) {\n        this.mapbox.setRTLTextPlugin(\n          this.RTLTextPluginUrl,\n          this.$_RTLTextPluginError\n        );\n      }\n      const eventNames = Object.keys(mapEvents);\n      this.$_bindMapEvents(eventNames);\n      this.$_registerAsyncActions(map);\n      this.$_bindPropsUpdateEvents();\n      this.initial = false;\n      this.initialized = true;\n      this.$emit(\"load\", { map, component: this });\n    });\n  },\n\n  beforeDestroy() {\n    this.$nextTick(() => {\n      if (this.map) this.map.remove();\n    });\n  }\n};\n</script>\n\n<style>\n.mgl-map-wrapper {\n  height: 100%;\n  position: relative;\n  width: 100%;\n}\n\n.mgl-map-wrapper .mapboxgl-map {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}