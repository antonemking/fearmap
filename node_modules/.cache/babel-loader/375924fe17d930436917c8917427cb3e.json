{"ast":null,"code":"import { MglMap, MglMarker } from \"vue-mapbox\";\nexport default {\n  components: {\n    MglMap,\n    MglMarker\n  },\n  name: \"HomeView\",\n\n  setup() {\n    let map;\n    onMounted(() => {\n      // init map\n      map = leaflet.map(\"mapid\", {\n        zoomControl: false\n      }).setView([28.538336, -81.379234], 10); // add tile layers\n\n      leaflet.tileLayer(`https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=${process.env.VUE_APP_API_KEY}`, {\n        maxZoom: 18,\n        id: \"mapbox/streets-v11\",\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: process.env.VUE_APP_API_KEY\n      }).addTo(map);\n      map.on(\"moveend\", () => {\n        closeSearchResults();\n      }); // get users location\n\n      getGeolocation();\n    });\n    const coords = ref(null);\n    const fetchCoords = ref(null);\n    const geoMarker = ref(null);\n    const geoError = ref(null);\n    const geoErrorMsg = ref(null);\n\n    const getGeolocation = () => {\n      // if function is called, only run if we dont have coords\n      if (!coords.value) {\n        // check to see if we have coods in session sotrage\n        if (sessionStorage.getItem(\"coords\")) {\n          coords.value = JSON.parse(sessionStorage.getItem(\"coords\"));\n          plotGeoLocation(coords.value);\n          return;\n        } // else get coords from geolocation API\n\n\n        fetchCoords.value = true;\n        navigator.geolocation.getCurrentPosition(setCoords, getLocError);\n        return;\n      } // otherwise, remove location\n\n\n      coords.value = null;\n      sessionStorage.removeItem(\"coords\");\n      map.removeLayer(geoMarker.value);\n    };\n\n    const setCoords = pos => {\n      // stop fetching\n      fetchCoords.value = null; // set coords in session storage\n\n      const setSessionCoords = {\n        lat: pos.latitude,\n        lng: pos.longitude\n      };\n      sessionStorage.setItem(\"coords\", JSON.stringify(setSessionCoords)); // set ref coords value\n\n      coords.value = setSessionCoords;\n      plotGeoLocation(coords.value);\n    };\n\n    const getLocError = error => {\n      // stop fetching coords\n      fetchCoords.value = null;\n      geoError.value = true;\n      geoErrorMsg.value = error.message;\n    };\n\n    const plotGeoLocation = coords => {\n      // create custom marker\n      const customMarker = leaflet.icon({\n        iconUrl: require(\"../assets/map-marker-red.svg\"),\n        iconSize: [35, 35]\n      }); // create new marker with coords and custom marker\n\n      geoMarker.value = leaflet.marker([coords.lat, coords.lng], {\n        icon: customMarker\n      }).addTo(map); // set map view to current location\n\n      map.setView([coords.lat, coords.lng], 10);\n    };\n\n    const resultMarker = ref(null);\n\n    const plotResult = coords => {\n      // If there is already a marker, remove it. Only allow 1\n      if (resultMarker.value) {\n        map.removeLayer(resultMarker.value);\n      }\n\n      const customMarker = leaflet.icon({\n        iconUrl: require(\"../assets/map-marker-blue.svg\"),\n        iconSize: [35, 35] // size of the icon\n\n      });\n      resultMarker.value = leaflet.marker([coords.coordinates[1], coords.coordinates[0]], {\n        icon: customMarker\n      }).addTo(map);\n      map.setView([coords.coordinates[1], coords.coordinates[0]], 13);\n    };\n\n    const removeResult = () => {\n      map.removeLayer(resultMarker.value);\n    };\n\n    const closeGeoError = () => {\n      geoErrorMsg.value = null;\n      geoError.value = null;\n    };\n\n    const searchResults = ref(null);\n\n    const toggleSearchResults = () => {\n      searchResults.value = !searchResults.value;\n    };\n\n    const closeSearchResults = () => {\n      searchResults.value = null;\n    };\n\n    return {\n      geoError,\n      closeGeoError,\n      geoErrorMsg,\n      fetchCoords,\n      coords,\n      getGeolocation,\n      plotResult,\n      searchResults,\n      toggleSearchResults,\n      closeSearchResults,\n      removeResult,\n      coordinates: [-111.549668, 39.014],\n      locations: [{\n        name: \"Brushy Mountain State Penitentiary\",\n        date: \"2019-10-26\",\n        coordinates: {\n          latitude: 36.1052,\n          longitude: -84.4529\n        }\n      }, {\n        name: \"Old South Pittsburg Hospital\",\n        date: \"2019-11-02\",\n        coordinates: {\n          latitude: 35.0021,\n          longitude: -85.7147\n        }\n      }],\n      accessToken: `${process.env.VUE_APP_API_KEY}`,\n      mapStyle: \"mapbox://styles/mapbox/basic-v10\"\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/muhammad/Ayaz/express-vue3-tailwind-map/client/src/views/HomeView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"flex h-screen relative\">\n    <div class=\"w-[30%]\">\n      <div\n        v-for=\"(location, ind) in locations\"\n        :key=\"ind\"\n        @click=\"setCoords(location.coordinates)\"\n        class=\"border-[1px] p-2\"\n      >\n        <h2 class=\"text-[14px]\">{{ location.name }}</h2>\n        <span>{{ location.date }}</span>\n      </div>\n    </div>\n    <MglMap\n    :accessToken=\"mapboxAccessToken\"\n    :mapStyle.sync=\"mapStyle\"\n    :center=\"coordinates\"\n  >\n    <MglMarker :coordinates=\"coordinates\" color=\"blue\" />\n  </MglMap>\n  </div>\n</template>\n\n<script>\nimport { MglMap, MglMarker } from \"vue-mapbox\";\nexport default {\n  components: {\n    MglMap,\n    MglMarker\n  },\n  name: \"HomeView\",\n  setup() {\n    let map;\n    onMounted(() => {\n      // init map\n      map = leaflet\n        .map(\"mapid\", {\n          zoomControl: false,\n        })\n        .setView([28.538336, -81.379234], 10);\n\n      // add tile layers\n      leaflet\n        .tileLayer(\n          `https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=${process.env.VUE_APP_API_KEY}`,\n          {\n            maxZoom: 18,\n            id: \"mapbox/streets-v11\",\n            tileSize: 512,\n            zoomOffset: -1,\n            accessToken: process.env.VUE_APP_API_KEY,\n          }\n        )\n        .addTo(map);\n\n      map.on(\"moveend\", () => {\n        closeSearchResults();\n      });\n\n\n      // get users location\n      getGeolocation();\n    });\n\n    const coords = ref(null);\n    const fetchCoords = ref(null);\n    const geoMarker = ref(null);\n    const geoError = ref(null);\n    const geoErrorMsg = ref(null);\n\n    const getGeolocation = () => {\n      // if function is called, only run if we dont have coords\n      if (!coords.value) {\n        // check to see if we have coods in session sotrage\n        if (sessionStorage.getItem(\"coords\")) {\n          coords.value = JSON.parse(sessionStorage.getItem(\"coords\"));\n          plotGeoLocation(coords.value);\n          return;\n        }\n\n        // else get coords from geolocation API\n        fetchCoords.value = true;\n        navigator.geolocation.getCurrentPosition(setCoords, getLocError);\n        return;\n      }\n\n      // otherwise, remove location\n      coords.value = null;\n      sessionStorage.removeItem(\"coords\");\n      map.removeLayer(geoMarker.value);\n    };\n\n    const setCoords = (pos) => {\n      // stop fetching\n      fetchCoords.value = null;\n\n      // set coords in session storage\n      const setSessionCoords = {\n        lat: pos.latitude,\n        lng: pos.longitude,\n      };\n      sessionStorage.setItem(\"coords\", JSON.stringify(setSessionCoords));\n\n      // set ref coords value\n      coords.value = setSessionCoords;\n\n      plotGeoLocation(coords.value);\n    };\n\n    const getLocError = (error) => {\n      // stop fetching coords\n      fetchCoords.value = null;\n      geoError.value = true;\n      geoErrorMsg.value = error.message;\n    };\n\n    const plotGeoLocation = (coords) => {\n      // create custom marker\n      const customMarker = leaflet.icon({\n        iconUrl: require(\"../assets/map-marker-red.svg\"),\n        iconSize: [35, 35],\n      });\n\n      // create new marker with coords and custom marker\n      geoMarker.value = leaflet\n        .marker([coords.lat, coords.lng], { icon: customMarker })\n        .addTo(map);\n\n      // set map view to current location\n      map.setView([coords.lat, coords.lng], 10);\n    };\n\n    const resultMarker = ref(null);\n    const plotResult = (coords) => {\n      // If there is already a marker, remove it. Only allow 1\n      if (resultMarker.value) {\n        map.removeLayer(resultMarker.value);\n      }\n      const customMarker = leaflet.icon({\n        iconUrl: require(\"../assets/map-marker-blue.svg\"),\n        iconSize: [35, 35], // size of the icon\n      });\n      resultMarker.value = leaflet\n        .marker([coords.coordinates[1], coords.coordinates[0]], {\n          icon: customMarker,\n        })\n        .addTo(map);\n      map.setView([coords.coordinates[1], coords.coordinates[0]], 13);\n    };\n\n    const removeResult = () => {\n      map.removeLayer(resultMarker.value);\n    };\n\n    const closeGeoError = () => {\n      geoErrorMsg.value = null;\n      geoError.value = null;\n    };\n\n    const searchResults = ref(null);\n    const toggleSearchResults = () => {\n      searchResults.value = !searchResults.value;\n    };\n    const closeSearchResults = () => {\n      searchResults.value = null;\n    };\n\n    return {\n      geoError,\n      closeGeoError,\n      geoErrorMsg,\n      fetchCoords,\n      coords,\n      getGeolocation,\n      plotResult,\n      searchResults,\n      toggleSearchResults,\n      closeSearchResults,\n      removeResult,\n      coordinates: [-111.549668, 39.014],\n      locations: [\n        {\n          name: \"Brushy Mountain State Penitentiary\",\n          date: \"2019-10-26\",\n          coordinates: {\n              latitude: 36.1052,\n              longitude: -84.4529,\n          },\n        },\n\n        {\n          name: \"Old South Pittsburg Hospital\",\n          date: \"2019-11-02\",\n          coordinates: {\n              latitude: 35.0021,\n              longitude: -85.7147,\n          },\n        },\n      ],\n      accessToken: `${process.env.VUE_APP_API_KEY}`,\n      mapStyle: \"mapbox://styles/mapbox/basic-v10\"\n    };\n  },\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}