{"ast":null,"code":"import withEvents from \"../../lib/withEvents\";\nimport withSelfEvents from \"./withSelfEvents\";\nconst popupEvents = {\n  open: \"open\",\n  close: \"close\"\n};\n/**\n * Popup component.\n * @see See [Mapbox Gl JS Popup](https://www.mapbox.com/mapbox-gl-js/api/#popup)\n */\n\nexport default {\n  name: \"Popup\",\n  mixins: [withEvents, withSelfEvents],\n  inject: {\n    mapbox: {\n      default: null\n    },\n    map: {\n      default: null\n    },\n    marker: {\n      default: null\n    }\n  },\n  props: {\n    /**\n     * If `true`, a close button will appear in the top right corner of the popup.\n     * Mapbox GL popup option.\n     */\n    closeButton: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Mapbox GL popup option.\n     * If `true`, the popup will closed when the map is clicked. .\n     */\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Mapbox GL popup option.\n     * A string indicating the popup's location relative to the coordinate set.\n     * If unset the anchor will be dynamically set to ensure the popup falls within the map container with a preference for 'bottom' .\n     *  'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right'\n     */\n    anchor: {\n      validator(value) {\n        let allowedValues = [\"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"];\n        return typeof value === \"string\" && allowedValues.includes(value);\n      },\n\n      default: undefined\n    },\n\n    /**\n     * Mapbox GL popup option.\n     * A pixel offset applied to the popup's location\n     * a single number specifying a distance from the popup's location\n     * a PointLike specifying a constant offset\n     * an object of Points specifing an offset for each anchor position Negative offsets indicate left and up.\n     */\n    offset: {\n      type: [Number, Object, Array],\n      default: () => [0, 0]\n    },\n    coordinates: {\n      type: Array\n    },\n\n    /**\n     * Component option.\n     * If `true`, popup treats data in deafult slot as plain text\n     */\n    onlyText: {\n      type: Boolean,\n      default: false\n    },\n    showed: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      initial: true,\n      popup: undefined\n    };\n  },\n\n  computed: {\n    open: {\n      get() {\n        if (this.popup !== undefined) {\n          return this.popup.isOpen();\n        }\n\n        return false;\n      },\n\n      set(value) {\n        if (this.map && this.popup) {\n          if (value) {\n            this.popup.remove();\n          } else {\n            this.popup.addTo(this.map);\n          }\n        }\n      }\n\n    }\n  },\n  watch: {\n    coordinates(lngLat) {\n      if (this.initial) return;\n      this.popup.setLngLat(lngLat);\n    },\n\n    showed(next, prev) {\n      if (next !== prev) {\n        this.open = next;\n\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    }\n\n  },\n\n  created() {\n    this.popup = new this.mapbox.Popup(this.$props);\n  },\n\n  mounted() {\n    this.$_addPopup();\n    this.initial = false;\n  },\n\n  beforeDestroy() {\n    if (this.map) {\n      this.popup.remove();\n      this.$_emitEvent(\"removed\");\n    }\n  },\n\n  methods: {\n    $_addPopup() {\n      this.popup = new this.mapbox.Popup(this.$props);\n\n      if (this.coordinates !== undefined) {\n        this.popup.setLngLat(this.coordinates);\n      }\n\n      if (this.$slots.default !== undefined) {\n        if (this.onlyText) {\n          if (this.$slots.default[0].elm.nodeType === 3) {\n            let tmpEl = document.createElement(\"span\");\n            tmpEl.appendChild(this.$slots.default[0].elm);\n            this.popup.setText(tmpEl.innerText);\n          } else {\n            this.popup.setText(this.$slots.default[0].elm.innerText);\n          }\n        } else {\n          this.popup.setDOMContent(this.$slots.default[0].elm);\n        }\n      }\n\n      this.$_bindSelfEvents(Object.keys(popupEvents), this.popup);\n      this.$_emitEvent(\"added\", {\n        popup: this.popup\n      });\n\n      if (this.marker) {\n        this.marker.setPopup(this.popup);\n      }\n\n      if (this.showed) {\n        this.open = true;\n\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    },\n\n    $_emitSelfEvent(event) {\n      this.$_emitMapEvent(event, {\n        popup: this.popup\n      });\n    },\n\n    remove() {\n      this.popup.remove();\n      this.$_emitEvent(\"remove\", {\n        popup: this.popup\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/muhammad/Ayaz/express-vue3-tailwind-map/client/node_modules/vue-mapbox/src/components/UI/Popup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"display: none\">\n    <!-- @slot Slot for popup content -->\n    <slot />\n  </div>\n</template>\n\n<script>\nimport withEvents from \"../../lib/withEvents\";\nimport withSelfEvents from \"./withSelfEvents\";\n\nconst popupEvents = {\n  open: \"open\",\n  close: \"close\"\n};\n\n/**\n * Popup component.\n * @see See [Mapbox Gl JS Popup](https://www.mapbox.com/mapbox-gl-js/api/#popup)\n */\nexport default {\n  name: \"Popup\",\n  mixins: [withEvents, withSelfEvents],\n\n  inject: {\n    mapbox: {\n      default: null\n    },\n    map: {\n      default: null\n    },\n    marker: {\n      default: null\n    }\n  },\n\n  props: {\n    /**\n     * If `true`, a close button will appear in the top right corner of the popup.\n     * Mapbox GL popup option.\n     */\n    closeButton: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Mapbox GL popup option.\n     * If `true`, the popup will closed when the map is clicked. .\n     */\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Mapbox GL popup option.\n     * A string indicating the popup's location relative to the coordinate set.\n     * If unset the anchor will be dynamically set to ensure the popup falls within the map container with a preference for 'bottom' .\n     *  'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right'\n     */\n    anchor: {\n      validator(value) {\n        let allowedValues = [\n          \"top\",\n          \"bottom\",\n          \"left\",\n          \"right\",\n          \"top-left\",\n          \"top-right\",\n          \"bottom-left\",\n          \"bottom-right\"\n        ];\n        return typeof value === \"string\" && allowedValues.includes(value);\n      },\n      default: undefined\n    },\n    /**\n     * Mapbox GL popup option.\n     * A pixel offset applied to the popup's location\n     * a single number specifying a distance from the popup's location\n     * a PointLike specifying a constant offset\n     * an object of Points specifing an offset for each anchor position Negative offsets indicate left and up.\n     */\n    offset: {\n      type: [Number, Object, Array],\n      default: () => [0, 0]\n    },\n    coordinates: {\n      type: Array\n    },\n\n    /**\n     * Component option.\n     * If `true`, popup treats data in deafult slot as plain text\n     */\n    onlyText: {\n      type: Boolean,\n      default: false\n    },\n\n    showed: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      initial: true,\n      popup: undefined\n    };\n  },\n\n  computed: {\n    open: {\n      get() {\n        if (this.popup !== undefined) {\n          return this.popup.isOpen();\n        }\n        return false;\n      },\n      set(value) {\n        if (this.map && this.popup) {\n          if (value) {\n            this.popup.remove();\n          } else {\n            this.popup.addTo(this.map);\n          }\n        }\n      }\n    }\n  },\n\n  watch: {\n    coordinates(lngLat) {\n      if (this.initial) return;\n      this.popup.setLngLat(lngLat);\n    },\n\n    showed(next, prev) {\n      if (next !== prev) {\n        this.open = next;\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    }\n  },\n\n  created() {\n    this.popup = new this.mapbox.Popup(this.$props);\n  },\n\n  mounted() {\n    this.$_addPopup();\n    this.initial = false;\n  },\n\n  beforeDestroy() {\n    if (this.map) {\n      this.popup.remove();\n      this.$_emitEvent(\"removed\");\n    }\n  },\n\n  methods: {\n    $_addPopup() {\n      this.popup = new this.mapbox.Popup(this.$props);\n      if (this.coordinates !== undefined) {\n        this.popup.setLngLat(this.coordinates);\n      }\n      if (this.$slots.default !== undefined) {\n        if (this.onlyText) {\n          if (this.$slots.default[0].elm.nodeType === 3) {\n            let tmpEl = document.createElement(\"span\");\n            tmpEl.appendChild(this.$slots.default[0].elm);\n            this.popup.setText(tmpEl.innerText);\n          } else {\n            this.popup.setText(this.$slots.default[0].elm.innerText);\n          }\n        } else {\n          this.popup.setDOMContent(this.$slots.default[0].elm);\n        }\n      }\n\n      this.$_bindSelfEvents(Object.keys(popupEvents), this.popup);\n\n      this.$_emitEvent(\"added\", { popup: this.popup });\n\n      if (this.marker) {\n        this.marker.setPopup(this.popup);\n      }\n      if (this.showed) {\n        this.open = true;\n\n        if (this.marker) {\n          this.marker.togglePopup();\n        }\n      }\n    },\n\n    $_emitSelfEvent(event) {\n      this.$_emitMapEvent(event, { popup: this.popup });\n    },\n\n    remove() {\n      this.popup.remove();\n      this.$_emitEvent(\"remove\", { popup: this.popup });\n    }\n  }\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}