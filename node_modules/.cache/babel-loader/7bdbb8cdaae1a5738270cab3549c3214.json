{"ast":null,"code":"import withEvents from \"../../lib/withEvents\";\nimport withSelfEvents from \"./withSelfEvents\";\nconst markerEvents = {\n  drag: \"drag\",\n  dragstart: \"dragstart\",\n  dragend: \"dragend\"\n};\nconst markerDOMEvents = {\n  click: \"click\",\n  mouseenter: \"mouseenter\",\n  mouseleave: \"mouseleave\"\n};\nexport default {\n  name: \"MapMarker\",\n  mixins: [withEvents, withSelfEvents],\n  inject: [\"mapbox\", \"map\"],\n\n  provide() {\n    const self = this;\n    return {\n      get marker() {\n        return self.marker;\n      }\n\n    };\n  },\n\n  props: {\n    // mapbox marker options\n    offset: {\n      type: [Object, Array],\n      default: () => [0, 0]\n    },\n    coordinates: {\n      type: Array,\n      required: true\n    },\n    color: {\n      type: String\n    },\n    anchor: {\n      type: String,\n      default: \"center\"\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      initial: true,\n      marker: undefined\n    };\n  },\n\n  watch: {\n    coordinates(lngLat) {\n      if (this.initial) return;\n      this.marker.setLngLat(lngLat);\n    },\n\n    draggable(next) {\n      if (this.initial) return;\n      this.marker.setDraggable(next);\n    }\n\n  },\n\n  mounted() {\n    const markerOptions = { ...this.$props\n    };\n\n    if (this.$slots.marker) {\n      markerOptions.element = this.$slots.marker[0].elm;\n    }\n\n    this.marker = new this.mapbox.Marker(markerOptions);\n\n    if (this.$listeners[\"update:coordinates\"]) {\n      this.marker.on(\"dragend\", event => {\n        let newCoordinates;\n\n        if (this.coordinates instanceof Array) {\n          newCoordinates = [event.target._lngLat.lng, event.target._lngLat.lat];\n        } else {\n          newCoordinates = event.target._lngLat;\n        }\n\n        this.$emit(\"update:coordinates\", newCoordinates);\n      });\n    }\n\n    const eventNames = Object.keys(markerEvents);\n    this.$_bindSelfEvents(eventNames, this.marker);\n    this.initial = false;\n    this.$_addMarker();\n  },\n\n  beforeDestroy() {\n    if (this.map !== undefined && this.marker !== undefined) {\n      this.marker.remove();\n    }\n  },\n\n  methods: {\n    $_addMarker() {\n      this.marker.setLngLat(this.coordinates).addTo(this.map);\n      this.$_bindMarkerDOMEvents();\n      this.$_emitEvent(\"added\", {\n        marker: this.marker\n      });\n    },\n\n    $_emitSelfEvent(event) {\n      this.$_emitMapEvent(event, {\n        marker: this.marker\n      });\n    },\n\n    $_bindMarkerDOMEvents() {\n      Object.keys(this.$listeners).forEach(key => {\n        if (Object.values(markerDOMEvents).includes(key)) {\n          this.marker._element.addEventListener(key, event => {\n            this.$_emitSelfEvent(event);\n          });\n        }\n      });\n    },\n\n    remove() {\n      this.marker.remove();\n      this.$_emitEvent(\"removed\");\n    },\n\n    togglePopup() {\n      return this.marker.togglePopup();\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/muhammad/Ayaz/express-vue3-tailwind-map/client/node_modules/vue-mapbox/src/components/UI/Marker.vue"],"names":[],"mappings":"AAUA,OAAO,UAAP,MAAuB,sBAAvB;AACA,OAAO,cAAP,MAA2B,kBAA3B;AAEA,MAAM,YAAW,GAAI;AACnB,EAAA,IAAI,EAAE,MADa;AAEnB,EAAA,SAAS,EAAE,WAFQ;AAGnB,EAAA,OAAO,EAAE;AAHU,CAArB;AAMA,MAAM,eAAc,GAAI;AACtB,EAAA,KAAK,EAAE,OADe;AAEtB,EAAA,UAAU,EAAE,YAFU;AAGtB,EAAA,UAAU,EAAE;AAHU,CAAxB;AAMA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAEb,EAAA,MAAM,EAAE,CAAC,UAAD,EAAa,cAAb,CAFK;AAIb,EAAA,MAAM,EAAE,CAAC,QAAD,EAAW,KAAX,CAJK;;AAMb,EAAA,OAAO,GAAG;AACR,UAAM,IAAG,GAAI,IAAb;AACA,WAAO;AACL,UAAI,MAAJ,GAAa;AACX,eAAO,IAAI,CAAC,MAAZ;AACF;;AAHK,KAAP;AAKD,GAbY;;AAeb,EAAA,KAAK,EAAE;AACL;AACA,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,CADA;AAEN,MAAA,OAAO,EAAE,MAAM,CAAC,CAAD,EAAI,CAAJ;AAFT,KAFH;AAML,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAE,KADK;AAEX,MAAA,QAAQ,EAAE;AAFC,KANR;AAUL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE;AADD,KAVF;AAaL,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,MADA;AAEN,MAAA,OAAO,EAAE;AAFH,KAbH;AAiBL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,OADG;AAET,MAAA,OAAO,EAAE;AAFA;AAjBN,GAfM;;AAsCb,EAAA,IAAI,GAAG;AACL,WAAO;AACL,MAAA,OAAO,EAAE,IADJ;AAEL,MAAA,MAAM,EAAE;AAFH,KAAP;AAID,GA3CY;;AA6Cb,EAAA,KAAK,EAAE;AACL,IAAA,WAAW,CAAC,MAAD,EAAS;AAClB,UAAI,KAAK,OAAT,EAAkB;AAClB,WAAK,MAAL,CAAY,SAAZ,CAAsB,MAAtB;AACD,KAJI;;AAKL,IAAA,SAAS,CAAC,IAAD,EAAO;AACd,UAAI,KAAK,OAAT,EAAkB;AAClB,WAAK,MAAL,CAAY,YAAZ,CAAyB,IAAzB;AACF;;AARK,GA7CM;;AAwDb,EAAA,OAAO,GAAG;AACR,UAAM,aAAY,GAAI,EACpB,GAAG,KAAK;AADY,KAAtB;;AAGA,QAAI,KAAK,MAAL,CAAY,MAAhB,EAAwB;AACtB,MAAA,aAAa,CAAC,OAAd,GAAwB,KAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,GAA9C;AACF;;AACA,SAAK,MAAL,GAAc,IAAI,KAAK,MAAL,CAAY,MAAhB,CAAuB,aAAvB,CAAd;;AAEA,QAAI,KAAK,UAAL,CAAgB,oBAAhB,CAAJ,EAA2C;AACzC,WAAK,MAAL,CAAY,EAAZ,CAAe,SAAf,EAA0B,KAAI,IAAK;AACjC,YAAI,cAAJ;;AACA,YAAI,KAAK,WAAL,YAA4B,KAAhC,EAAuC;AACrC,UAAA,cAAa,GAAI,CAAC,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,GAAtB,EAA2B,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,GAAhD,CAAjB;AACF,SAFA,MAEO;AACL,UAAA,cAAa,GAAI,KAAK,CAAC,MAAN,CAAa,OAA9B;AACF;;AACA,aAAK,KAAL,CAAW,oBAAX,EAAiC,cAAjC;AACD,OARD;AASF;;AAEA,UAAM,UAAS,GAAI,MAAM,CAAC,IAAP,CAAY,YAAZ,CAAnB;AACA,SAAK,gBAAL,CAAsB,UAAtB,EAAkC,KAAK,MAAvC;AAEA,SAAK,OAAL,GAAe,KAAf;AACA,SAAK,WAAL;AACD,GAlFY;;AAoFb,EAAA,aAAa,GAAG;AACd,QAAI,KAAK,GAAL,KAAa,SAAb,IAA0B,KAAK,MAAL,KAAgB,SAA9C,EAAyD;AACvD,WAAK,MAAL,CAAY,MAAZ;AACF;AACD,GAxFY;;AA0Fb,EAAA,OAAO,EAAE;AACP,IAAA,WAAW,GAAG;AACZ,WAAK,MAAL,CAAY,SAAZ,CAAsB,KAAK,WAA3B,EAAwC,KAAxC,CAA8C,KAAK,GAAnD;AACA,WAAK,qBAAL;AACA,WAAK,WAAL,CAAiB,OAAjB,EAA0B;AAAE,QAAA,MAAM,EAAE,KAAK;AAAf,OAA1B;AACD,KALM;;AAOP,IAAA,eAAe,CAAC,KAAD,EAAQ;AACrB,WAAK,cAAL,CAAoB,KAApB,EAA2B;AAAE,QAAA,MAAM,EAAE,KAAK;AAAf,OAA3B;AACD,KATM;;AAWP,IAAA,qBAAqB,GAAG;AACtB,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,UAAjB,EAA6B,OAA7B,CAAqC,GAAE,IAAK;AAC1C,YAAI,MAAM,CAAC,MAAP,CAAc,eAAd,EAA+B,QAA/B,CAAwC,GAAxC,CAAJ,EAAkD;AAChD,eAAK,MAAL,CAAY,QAAZ,CAAqB,gBAArB,CAAsC,GAAtC,EAA2C,KAAI,IAAK;AAClD,iBAAK,eAAL,CAAqB,KAArB;AACD,WAFD;AAGF;AACD,OAND;AAOD,KAnBM;;AAqBP,IAAA,MAAM,GAAG;AACP,WAAK,MAAL,CAAY,MAAZ;AACA,WAAK,WAAL,CAAiB,SAAjB;AACD,KAxBM;;AA0BP,IAAA,WAAW,GAAG;AACZ,aAAO,KAAK,MAAL,CAAY,WAAZ,EAAP;AACF;;AA5BO;AA1FI,CAAf","sourcesContent":["<template>\n  <div style=\"display: none\">\n    <!-- slot for custom marker -->\n    <slot name=\"marker\" />\n    <!-- slot for popup -->\n    <slot v-if=\"marker\" />\n  </div>\n</template>\n\n<script>\nimport withEvents from \"../../lib/withEvents\";\nimport withSelfEvents from \"./withSelfEvents\";\n\nconst markerEvents = {\n  drag: \"drag\",\n  dragstart: \"dragstart\",\n  dragend: \"dragend\"\n};\n\nconst markerDOMEvents = {\n  click: \"click\",\n  mouseenter: \"mouseenter\",\n  mouseleave: \"mouseleave\"\n};\n\nexport default {\n  name: \"MapMarker\",\n  mixins: [withEvents, withSelfEvents],\n\n  inject: [\"mapbox\", \"map\"],\n\n  provide() {\n    const self = this;\n    return {\n      get marker() {\n        return self.marker;\n      }\n    };\n  },\n\n  props: {\n    // mapbox marker options\n    offset: {\n      type: [Object, Array],\n      default: () => [0, 0]\n    },\n    coordinates: {\n      type: Array,\n      required: true\n    },\n    color: {\n      type: String\n    },\n    anchor: {\n      type: String,\n      default: \"center\"\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      initial: true,\n      marker: undefined\n    };\n  },\n\n  watch: {\n    coordinates(lngLat) {\n      if (this.initial) return;\n      this.marker.setLngLat(lngLat);\n    },\n    draggable(next) {\n      if (this.initial) return;\n      this.marker.setDraggable(next);\n    }\n  },\n\n  mounted() {\n    const markerOptions = {\n      ...this.$props\n    };\n    if (this.$slots.marker) {\n      markerOptions.element = this.$slots.marker[0].elm;\n    }\n    this.marker = new this.mapbox.Marker(markerOptions);\n\n    if (this.$listeners[\"update:coordinates\"]) {\n      this.marker.on(\"dragend\", event => {\n        let newCoordinates;\n        if (this.coordinates instanceof Array) {\n          newCoordinates = [event.target._lngLat.lng, event.target._lngLat.lat];\n        } else {\n          newCoordinates = event.target._lngLat;\n        }\n        this.$emit(\"update:coordinates\", newCoordinates);\n      });\n    }\n\n    const eventNames = Object.keys(markerEvents);\n    this.$_bindSelfEvents(eventNames, this.marker);\n\n    this.initial = false;\n    this.$_addMarker();\n  },\n\n  beforeDestroy() {\n    if (this.map !== undefined && this.marker !== undefined) {\n      this.marker.remove();\n    }\n  },\n\n  methods: {\n    $_addMarker() {\n      this.marker.setLngLat(this.coordinates).addTo(this.map);\n      this.$_bindMarkerDOMEvents();\n      this.$_emitEvent(\"added\", { marker: this.marker });\n    },\n\n    $_emitSelfEvent(event) {\n      this.$_emitMapEvent(event, { marker: this.marker });\n    },\n\n    $_bindMarkerDOMEvents() {\n      Object.keys(this.$listeners).forEach(key => {\n        if (Object.values(markerDOMEvents).includes(key)) {\n          this.marker._element.addEventListener(key, event => {\n            this.$_emitSelfEvent(event);\n          });\n        }\n      });\n    },\n\n    remove() {\n      this.marker.remove();\n      this.$_emitEvent(\"removed\");\n    },\n\n    togglePopup() {\n      return this.marker.togglePopup();\n    }\n  }\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}